{"ast":null,"code":"var _jsxFileName = \"/Users/brar.tanveerk/Desktop/projects/personal-website/src/Commento.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport commento from './images/commento_logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Empl() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Commento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This project was created in a group of four as a submission for DeltaHacks. We created a Google Chrome extension that detects if it is on a YouTube video and gathers the comments of the video to generate the net reaction to the video. For this we used Vanilla Javascript for the backend and a YouTube API to extract the comments. While we can view the top 10 comments of the video, we are still working on including an open source Artifical Intelligence library(written in NodeJS) to judge the net reaction from the video based on the frequency of positive and negative words.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://github.com/OmarBakr-03/DeltaHacks\",\n        children: \"Github\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://devpost.com/software/commento\",\n        children: \"Demo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Empl;\nexport default Empl;\n\nvar _c;\n\n$RefreshReg$(_c, \"Empl\");","map":{"version":3,"sources":["/Users/brar.tanveerk/Desktop/projects/personal-website/src/Commento.js"],"names":["React","commento","Empl"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,4BAArB;;;AAEA,SAASC,IAAT,GAAgB;AACZ,sBACA;AAAA,2BAII;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAQI;AAAG,QAAA,IAAI,EAAC,2CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAG,QAAA,IAAI,EAAC,uCAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADA;AAkBH;;KAnBQA,I;AAqBT,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport commento from './images/commento_logo.png';\n\nfunction Empl() {\n    return(\n    <div>\n        {/* <div className=\"left\">\n            <a href=\"https://github.com/OmarBakr-03/DeltaHacks\"><img src={commento} alt=\"commento-logo\"/></a>\n        </div> */}\n        <div className=\"right\">\n            <h3>Commento</h3>\n            <p>This project was created in a group of four as a submission for DeltaHacks. We created a Google Chrome extension \n                that detects if it is on a YouTube video and gathers the comments of the video to generate the net reaction to the video.\n                For this we used Vanilla Javascript for the backend and a YouTube API to extract the comments. While we can view the top 10 comments\n                of the video, we are still working on including an open source Artifical Intelligence library(written in NodeJS) to judge the net reaction from \n                the video based on the frequency of positive and negative words. \n            </p>\n            <a href=\"https://github.com/OmarBakr-03/DeltaHacks\">Github</a>\n            <a href=\"https://devpost.com/software/commento\">Demo</a>\n        </div>\n    </div>\n    )\n}\n\nexport default Empl;"]},"metadata":{},"sourceType":"module"}